CHIP Mult{
    IN a[16], b[16];
    OUT out[16];

    PARTS:
    
    Mult1with16(a=b[0], b=a, out=k1);
    BitShiftL(in=a, out=s1);
	
    Mult1with16(a=b[1], b=s1, out=k2);
    BitShiftL(in=s1, out =s2);
	
    Mult1with16(a=b[2], b=s2, out=k3);
    BitShiftL(in=s2, out =s3);
	
    Mult1with16(a=b[3], b=s3, out=k4);
    BitShiftL(in=s3, out =s4);
	
    Mult1with16(a=b[4], b=s4, out=k5);
    BitShiftL(in=s4, out =s5);
	
    Mult1with16(a=b[5], b=s5, out=k6);
    BitShiftL(in=s5, out =s6);
	
    Mult1with16(a=b[6], b=s6, out=k7);
    BitShiftL(in=s6, out =s7);
	
    Mult1with16(a=b[7], b=s7, out=k8);
    BitShiftL(in=s7, out =s8);
	
    Mult1with16(a=b[8], b=s8, out=k9);
    BitShiftL(in=s8, out =s9);
	
    Mult1with16(a=b[9], b=s9, out=k10);
    BitShiftL(in=s9, out =s10);
	
    Mult1with16(a=b[10], b=s10, out=k11);
    BitShiftL(in=s10, out =s11);
	
    Mult1with16(a=b[11], b=s11, out=k12);
    BitShiftL(in=s11, out =s12);
	
    Mult1with16(a=b[12], b=s12, out=k13);
    BitShiftL(in=s12, out =s13);
	
    Mult1with16(a=b[13], b=s13, out=k14);
    BitShiftL(in=s13, out =s14);
	
    Mult1with16(a=b[14], b=s14, out=k15);
    BitShiftL(in=s14, out =s15);
	
    Mult1with16(a=b[15], b=s15, out=k16);
    
    Add16(a=k1, b=k2, out=out1);
    Add16(a=out1, b=k3, out=out2);
    Add16(a=out2, b=k4, out=out3);
    Add16(a=out3, b=k5, out=out4);
    Add16(a=out4, b=k6, out=out5);
    Add16(a=out5, b=k7, out=out6);
    Add16(a=out6, b=k8, out=out7);
    Add16(a=out7, b=k9, out=out8);
    Add16(a=out8, b=k10, out=out9);
    Add16(a=out9, b=k11, out=out10);
    Add16(a=out10, b=k12, out=out11);
    Add16(a=out11, b=k13, out=out12);
    Add16(a=out12, b=k14, out=out13);
    Add16(a=out13, b=k15, out=out14);
    Add16(a=out14, b=k16, out=out);  
}
